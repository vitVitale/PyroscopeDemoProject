{"version":3,"file":"546.js?_cache=810d946f2213fe3deeaf","mappings":"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","sources":["webpack://grafana-lokiexplore-app/./Components/OpenInLogsDrilldownButton/OpenInLogsDrilldownButton.tsx","webpack://grafana-lokiexplore-app/./services/analytics.ts"],"sourcesContent":["import React, { useMemo } from 'react';\n\nimport { AbstractLabelOperator } from '@grafana/data';\nimport { useReturnToPrevious } from '@grafana/runtime';\nimport { LinkButton } from '@grafana/ui';\n\nimport { reportAppInteraction, USER_EVENTS_ACTIONS, USER_EVENTS_PAGES } from '../../services/analytics';\nimport { OpenInLogsDrilldownButtonProps } from './types';\nimport {\n  appendUrlParameter,\n  createAppUrl,\n  escapeURLDelimiters,\n  replaceEscapeChars,\n  replaceSlash,\n  setUrlParameter,\n  stringifyAdHocValues,\n  UrlParameters,\n} from 'services/extensions/links';\nimport { LabelFilterOp } from 'services/filterTypes';\n\nconst operatorMap = {\n  [AbstractLabelOperator.Equal]: LabelFilterOp.Equal,\n  [AbstractLabelOperator.NotEqual]: LabelFilterOp.NotEqual,\n  [AbstractLabelOperator.EqualRegEx]: LabelFilterOp.RegexEqual,\n  [AbstractLabelOperator.NotEqualRegEx]: LabelFilterOp.RegexNotEqual,\n};\n\nexport default function OpenInLogsDrilldownButton({\n  datasourceUid,\n  from,\n  renderButton,\n  returnToPreviousSource,\n  streamSelectors,\n  to,\n}: OpenInLogsDrilldownButtonProps) {\n  const setReturnToPrevious = useReturnToPrevious();\n\n  const href = useMemo(() => {\n    const mainLabel = streamSelectors[0];\n\n    if (\n      !mainLabel ||\n      // we can't open in explore logs if main label matcher is something different from equal\n      mainLabel?.operator !== AbstractLabelOperator.Equal\n    ) {\n      return null;\n    }\n\n    const labelValue = replaceSlash(mainLabel.value);\n\n    let params = new URLSearchParams();\n\n    if (datasourceUid) {\n      params = setUrlParameter(UrlParameters.DatasourceId, datasourceUid, params);\n    }\n\n    if (from) {\n      params = setUrlParameter(UrlParameters.TimeRangeFrom, from, params);\n    }\n\n    if (to) {\n      params = setUrlParameter(UrlParameters.TimeRangeTo, to, params);\n    }\n\n    streamSelectors.forEach((streamSelector) => {\n      params = appendUrlParameter(\n        UrlParameters.Labels,\n        `${streamSelector.name}|${operatorMap[streamSelector.operator]}|${escapeURLDelimiters(\n          stringifyAdHocValues(streamSelector.value)\n        )},${escapeURLDelimiters(replaceEscapeChars(streamSelector.value))}`,\n        params\n      );\n    });\n\n    return createAppUrl(`/explore/${mainLabel.name}/${labelValue}/logs`, params);\n  }, [datasourceUid, from, to, streamSelectors]);\n\n  if (!href) {\n    return null;\n  }\n\n  if (renderButton) {\n    return renderButton({ href });\n  }\n\n  return (\n    <LinkButton\n      variant=\"secondary\"\n      href={href}\n      onClick={() => {\n        reportAppInteraction(USER_EVENTS_PAGES.service_details, USER_EVENTS_ACTIONS.service_details.link_button_click);\n        setReturnToPrevious(returnToPreviousSource || 'previous');\n      }}\n    >\n      Open in Logs Drilldown\n    </LinkButton>\n  );\n}\n","import { reportInteraction } from '@grafana/runtime';\n\nimport pluginJson from '../plugin.json';\n\n// Helper function to create a unique interaction name for analytics\nconst createInteractionName = (page: UserEventPagesType, action: string) => {\n  return `${pluginJson.id.replace(/-/g, '_')}_${page}_${action}`;\n};\n\n// Runs reportInteraction with a standardized interaction name\nexport const reportAppInteraction = (\n  page: UserEventPagesType,\n  action: UserEventActionType,\n  properties?: Record<string, unknown>,\n  once = false\n) => {\n  const interactionName = createInteractionName(page, action);\n  if (once) {\n    if (sessionStorage.getItem(interactionName)) {\n      return;\n    }\n    sessionStorage.setItem(interactionName, '1');\n  }\n  reportInteraction(interactionName, properties);\n};\n\nexport const USER_EVENTS_PAGES = {\n  all: 'all',\n  service_details: 'service_details',\n  service_selection: 'service_selection',\n} as const;\n\ntype UserEventPagesType = keyof typeof USER_EVENTS_PAGES;\ntype UserEventActionType =\n  | keyof (typeof USER_EVENTS_ACTIONS)['service_selection']\n  | keyof (typeof USER_EVENTS_ACTIONS)['service_details']\n  | keyof (typeof USER_EVENTS_ACTIONS)['all'];\n\nexport const USER_EVENTS_ACTIONS = {\n  [USER_EVENTS_PAGES.service_selection]: {\n    add_to_filters: 'add_to_filters',\n    // Toggling aggregated metrics on/off\n    aggregated_metrics_toggled: 'aggregated_metrics_toggled',\n    // Searching for service using search input. Props: searchQueryLength, containsLevel\n    search_services_changed: 'search_services_changed',\n    // Selecting service. Props: service\n    service_selected: 'service_selected',\n  },\n  [USER_EVENTS_PAGES.service_details]: {\n    // Selecting action view tab (logs/labels/fields/patterns). Props: newActionView, previousActionView\n    action_view_changed: 'action_view_changed',\n    // Clicking on \"Include\" button in time series panels. Used in multiple views. The view type is passed as a parameter. Props: filterType, key, isFilterDuplicate, filtersLength\n    add_to_filters_in_breakdown_clicked: 'add_to_filters_in_breakdown_clicked',\n    // Adding a positive or negative filter from the JSON panel\n    add_to_filters_in_json_panel: 'add_to_filters_in_json_panel',\n    // Setting a new root in the json panel\n    change_line_format_in_json_panel: 'change_line_format_in_json_panel',\n    change_viz_type: 'change_viz_type',\n    label_in_panel_summary_clicked: 'label_in_panel_summary_clicked',\n    // Changing layout type (e.g. single/grid/rows). Used in multiple views. The view type is passed as a parameter. Props: layout, view\n    layout_type_changed: 'layout_type_changed',\n    // Clicking on one of the levels in the Logs Volume panel\n    level_in_logs_volume_clicked: 'level_in_logs_volume_clicked',\n    // Clear all displayed fields\n    logs_clear_displayed_fields: 'logs_clear_displayed_fields',\n    // Fires when logs panel query returns successfully\n    logs_on_query_complete: 'logs_on_query_complete',\n    // Fires when logs panel query returns an error\n    logs_on_query_error: 'logs_on_query_error',\n    // Filter (include, exclude) from log details\n    logs_detail_filter_applied: 'logs_detail_filter_applied',\n    // Popover menu filter\n    logs_popover_line_filter: 'logs_popover_line_filter',\n    // Toggle displayed fields\n    logs_toggle_displayed_field: 'logs_toggle_displayed_field',\n    // Toggling between logs/table/json view\n    logs_visualization_toggle: 'logs_visualization_toggle',\n    open_in_explore_clicked: 'open_in_explore_clicked',\n    // Clicking on a pattern field in the pattern name.\n    pattern_field_clicked: 'pattern_field_clicked',\n    // Removing a pattern (e.g. include/exclude) from the list. Props: includePatternsLength, excludePatternsLength, type\n    pattern_removed: 'pattern_removed',\n    // Selecting a pattern (e.g. include/exclude) from the list. Props: includePatternsLength, excludePatternsLength, type\n    pattern_selected: 'pattern_selected',\n    // Changing search string in logs. Props: searchQuery\n    search_string_in_logs_changed: 'search_string_in_logs_changed',\n    search_string_in_variables_changed: 'search_string_in_variables_changed',\n    // Clicking on \"Select\" button button in time series panels. Used in multiple views.The view type is passed as a parameter. Props: field, previousField, view\n    select_field_in_breakdown_clicked: 'select_field_in_breakdown_clicked',\n    toggle_error_panels: 'toggle_error_panels',\n    // Value breakdown sort change\n    value_breakdown_sort_change: 'value_breakdown_sort_change',\n    // Wasm not supported\n    wasm_not_supported: 'wasm_not_supported',\n    // Go to explore button in embedded UI\n    embedded_go_to_explore_clicked: 'embedded_go_to_explore_clicked',\n    // Fires when viz is activated\n    visualization_init: 'visualization_init',\n    // fields rollup viz type toggle\n    fields_panel_type_toggle: 'fields_panel_type_toggle',\n    // table header buttons\n    table_columns_header_button_reset_width: 'table_columns_header_button_reset_width',\n    table_columns_header_button_show_labels: 'table_columns_header_button_show_labels',\n    table_columns_header_button_show_text: 'table_columns_header_button_show_text',\n    // table column header menu\n    table_columns_header_menu_show: 'table_columns_header_menu_show',\n    table_columns_header_menu_reset_width: 'table_columns_header_menu_reset_width',\n    table_columns_header_menu_show_labels: 'table_columns_header_menu_show_labels',\n    table_columns_header_menu_show_text: 'table_columns_header_menu_show_text',\n    table_columns_header_menu_slide_left: 'table_columns_header_menu_slide_left',\n    table_columns_header_menu_slide_right: 'table_columns_header_menu_slide_right',\n    table_columns_header_menu_hide_column: 'table_columns_header_menu_hide_column',\n    // Embedded\n    embedded_init: 'embedded_init',\n    embedded_error: 'embedded_error',\n    // link button on click\n    link_button_click: 'link_button_click',\n  },\n  [USER_EVENTS_PAGES.all]: {\n    interval_too_long: 'interval_too_long',\n    open_in_explore_menu_clicked: 'open_in_explore_menu_clicked',\n  },\n} as const;\n"],"names":["operatorMap","AbstractLabelOperator","Equal","LabelFilterOp","NotEqual","EqualRegEx","RegexEqual","NotEqualRegEx","RegexNotEqual","OpenInLogsDrilldownButton","datasourceUid","from","renderButton","returnToPreviousSource","streamSelectors","to","setReturnToPrevious","useReturnToPrevious","href","useMemo","mainLabel","operator","labelValue","replaceSlash","value","params","URLSearchParams","setUrlParameter","UrlParameters","DatasourceId","TimeRangeFrom","TimeRangeTo","forEach","streamSelector","appendUrlParameter","Labels","name","escapeURLDelimiters","stringifyAdHocValues","replaceEscapeChars","createAppUrl","LinkButton","variant","onClick","reportAppInteraction","USER_EVENTS_PAGES","service_details","USER_EVENTS_ACTIONS","link_button_click","page","action","properties","once","interactionName","pluginJson","replace","createInteractionName","sessionStorage","getItem","setItem","reportInteraction","all","service_selection","add_to_filters","aggregated_metrics_toggled","search_services_changed","service_selected","action_view_changed","add_to_filters_in_breakdown_clicked","add_to_filters_in_json_panel","change_line_format_in_json_panel","change_viz_type","label_in_panel_summary_clicked","layout_type_changed","level_in_logs_volume_clicked","logs_clear_displayed_fields","logs_on_query_complete","logs_on_query_error","logs_detail_filter_applied","logs_popover_line_filter","logs_toggle_displayed_field","logs_visualization_toggle","open_in_explore_clicked","pattern_field_clicked","pattern_removed","pattern_selected","search_string_in_logs_changed","search_string_in_variables_changed","select_field_in_breakdown_clicked","toggle_error_panels","value_breakdown_sort_change","wasm_not_supported","embedded_go_to_explore_clicked","visualization_init","fields_panel_type_toggle","table_columns_header_button_reset_width","table_columns_header_button_show_labels","table_columns_header_button_show_text","table_columns_header_menu_show","table_columns_header_menu_reset_width","table_columns_header_menu_show_labels","table_columns_header_menu_show_text","table_columns_header_menu_slide_left","table_columns_header_menu_slide_right","table_columns_header_menu_hide_column","embedded_init","embedded_error","interval_too_long","open_in_explore_menu_clicked"],"sourceRoot":""}